<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windowsコンテナ on 備忘録</title>
    <link>https://blog.pokapu.jp/tags/windows%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A/</link>
    <description>Recent content in Windowsコンテナ on 備忘録</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <copyright>Copyright © 2022 Hiroki Matsueda</copyright>
    <lastBuildDate>Wed, 08 Apr 2020 21:07:42 +0900</lastBuildDate>
    <atom:link href="https://blog.pokapu.jp/tags/windows%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>自作のWindowsアプリをAKSに載せるキホン技</title>
      <link>https://blog.pokapu.jp/post/get-started-with-windows-container-aks-easily/</link>
      <pubDate>Wed, 08 Apr 2020 21:07:42 +0900</pubDate>
      <guid>https://blog.pokapu.jp/post/get-started-with-windows-container-aks-easily/</guid>
      <description>&lt;p&gt;Azure Kubernetes Service(以降、AKS)は Windows コンテナの使用できる構成を作成することができます。&lt;/p&gt;&#xA;&lt;p&gt;（記事公開時点ではパブリックプレビュー）&lt;/p&gt;&#xA;&lt;p&gt;Windows コンテナが使える AKS を用意して、アプリを動かしてみましょう。&lt;/p&gt;&#xA;&lt;p&gt;アプリの作成からインフラの作成まで一通り必要な手順を書いてみましたので、この記事をベースに Windows コンテナの世界に入門していただけたらと思います。&lt;/p&gt;&#xA;&lt;p&gt;また、アプリ開発、コンテナ作成、AKS 作成を一通り記載しているので、例えばアプリ開発は知識があるけどインフラはちょっと・・・という場合に部分的に参照していただけると嬉しいです。&lt;/p&gt;&#xA;&lt;p&gt;Azure Cloud Shell とはなんぞや？などの細かい説明は省いていますので、適宜調べながら読み進めていただけたらと思います。&lt;/p&gt;&#xA;&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;（Windows 環境でしか動作しない）アプリケーションを作成します&lt;/li&gt;&#xA;&lt;li&gt;アプリケーションを載せたコンテナイメージを作成します&lt;/li&gt;&#xA;&lt;li&gt;コンテナイメージをコンテナレジストリ（ACR）に格納します&lt;/li&gt;&#xA;&lt;li&gt;Windows コンテナが動作する AKS を作成します&lt;/li&gt;&#xA;&lt;li&gt;マニフェストファイルを使用して、AKS 上でコンテナを動かします&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;web-アプリの作成&#34;&gt;Web アプリの作成&lt;/h2&gt;&#xA;&lt;p&gt;【作業環境の想定：手元の Windows PC】&lt;/p&gt;&#xA;&lt;p&gt;Web 上に公開されているサンプルアプリを使っても良いんですが、現実は自社で作成したアプリなどを使用すると思うので、Web アプリの作成からサラッと見てみましょう。&lt;/p&gt;&#xA;&lt;p&gt;Windows コンテナが必要なケースは、Windows でしか動作しないアプリ、例えば.NET Framework のアプリを使用している場合だと思われます。.NET Framework の ASP.NET MVC アプリを作っておきましょう。&lt;/p&gt;&#xA;&lt;p&gt;下記サイトから Visual Studio のインストーラをダウンロードします。&#xA;&lt;a href=&#34;https://visualstudio.microsoft.com/ja/downloads/&#34;&gt;https://visualstudio.microsoft.com/ja/downloads/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;インストーラを起動し、「ASP.NET と Web 開発」を選択してインストールします。&lt;/p&gt;&#xA;&lt;p&gt;インストールが成功したら、新規プロジェクトを起動して、C#の ASP.NET MVC アプリを作成しましょう。&lt;/p&gt;&#xA;&lt;p&gt;ちょっと古めのアプリを載せる想定だと思いますので、.NET Framework は「4.5.2」辺りが良いでしょうか。プロジェクト名は適当で良いので、「MVC」のアプリを作成してください。&lt;/p&gt;&#xA;&lt;p&gt;アプリが作成されたら、Visual Studio のソリューションエクスプローラーから、Views/Home/Index.cshtml を開き、適当な加工を加えて実行してみてください。例えば下記のような感じでザックリいきましょう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ViewBag.Title = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;コンテナアプリのデモ&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;div class=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jumbotron&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;h1&amp;gt;ASP.NET&amp;lt;/h1&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;p class=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lead&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;コンテナで&lt;/span&gt;Webアプリを動かしてみよう&amp;lt;/p&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/div&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;F5 キーでアプリの正常動作を確認したら、アプリケーションを発行しましょう。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dockerfileに出てくる謎のexe、ServiceMonitor</title>
      <link>https://blog.pokapu.jp/post/mysterious-exe-that-appears-in-dockerfile/</link>
      <pubDate>Mon, 03 Feb 2020 21:29:12 +0900</pubDate>
      <guid>https://blog.pokapu.jp/post/mysterious-exe-that-appears-in-dockerfile/</guid>
      <description>&lt;h2 id=&#34;dockerfile-の基本的な書き方&#34;&gt;Dockerfile の基本的な書き方&lt;/h2&gt;&#xA;&lt;p&gt;皆様、Windows コンテナで遊んでいますか？&lt;/p&gt;&#xA;&lt;p&gt;Dockerfile に書く内容は、誤解を恐れず表現すると、だいたい下記のような流れですよね。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;ベースイメージ&lt;/li&gt;&#xA;&lt;li&gt;ミドルウェアのインストール、セットアップの処理&lt;/li&gt;&#xA;&lt;li&gt;アプリケーションのコピー&lt;/li&gt;&#xA;&lt;li&gt;アプリケーションの起動を監視するために ENTRYPOINT を記載&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;これだけ認識していれば、例えば単発実行や無限ループで処理待機するコンソールアプリケーションのコンテナ化なんてのは、（細かいことを無視すれば）すぐにできてしまうと思います。&lt;/p&gt;&#xA;&lt;h2 id=&#34;謎の-exe-servicemonitor&#34;&gt;謎の exe 、ServiceMonitor&lt;/h2&gt;&#xA;&lt;p&gt;しかし、例えば下記の Dockerfile を見てください。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/dotnet-framework-docker/blob/7d120a3da56ea5279e1b54a8185530af056c7b33/4.8/aspnet/windowsservercore-ltsc2019/Dockerfile&#34;&gt;https://github.com/microsoft/dotnet-framework-docker/blob/7d120a3da56ea5279e1b54a8185530af056c7b33/4.8/aspnet/windowsservercore-ltsc2019/Dockerfile&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;これは IIS で動く Web アプリを動かすときに使える Dockerfile になるんですが、 ENTRYPOINT に ServiceMonitor.exe なるものが指定されています。&lt;/p&gt;&#xA;&lt;p&gt;「なにこれ」と思いませんでしたか？&lt;/p&gt;&#xA;&lt;p&gt;私は思いました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;そもそも-entrypoint-って何だっけ&#34;&gt;そもそも ENTRYPOINT って何だっけ&lt;/h2&gt;&#xA;&lt;p&gt;ENTRYPOINT は「コンテナが実行するファイルを設定します。」とのことです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://docs.docker.jp/v1.11/engine/reference/builder.html#entrypoint&#34;&gt;http://docs.docker.jp/v1.11/engine/reference/builder.html#entrypoint&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;そして、その「実行するファイル」が終了すると共に、コンテナが終了します。&lt;/p&gt;&#xA;&lt;p&gt;これを IIS で動かすアプリに当てはめるとどうなるでしょうか？&lt;/p&gt;&#xA;&lt;p&gt;IIS で動かすアプリは exe ファイルでは無いので、それ単体で実行することはできませんよね。IIS の上に載せてあげることで初めて動作します。&lt;/p&gt;&#xA;&lt;p&gt;ということは、IIS が ENTRYPOINT に記載すべきものとなります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、 IIS 自体はサービスなので、「コンテナが実行するファイル」とは違う概念になります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;サービスの起動状態を監視するアプリが欲しい&#34;&gt;「サービスの起動状態を監視するアプリ」が欲しい&lt;/h2&gt;&#xA;&lt;p&gt;例えば、「コンテナが実行するファイル」が IIS というサービスの起動状態を監視してくれて、そのサービスの状態に従って終了してくれたら良さそうに思いませんか？&lt;/p&gt;&#xA;&lt;p&gt;そんな役割を担ってくれるのが ServiceMonitor.exe です。&lt;/p&gt;&#xA;&lt;p&gt;よって、IIS のようなサービスの状態がコンテナの起動状態を左右する場合は、 ServiceMonitor.exe を ENTRYPOINT に指定してあげればコンテナが実現できそうですね。&lt;/p&gt;&#xA;&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;&#xA;&lt;p&gt;ServiceMonitor.exe のおかげて IIS アプリのコンテナが実現できることが分かりましたでしょうか？&#xA;広く公開されている Dockerfile は参考になるので、「これ何やってるんだろう？」を深堀してみると面白いですし、勉強になります。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
