<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>golang on 備忘録</title>
    <link>https://hirokimatsueda.github.io/tags/golang/</link>
    <description>Recent content in golang on 備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright © 2022 Hiroki Matsueda</copyright>
    <lastBuildDate>Fri, 10 Jul 2020 08:40:25 +0900</lastBuildDate><atom:link href="https://hirokimatsueda.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>goでjsonを臨機応変に扱う</title>
      <link>https://hirokimatsueda.github.io/post/treat-json-flexibly-with-go/</link>
      <pubDate>Fri, 10 Jul 2020 08:40:25 +0900</pubDate>
      
      <guid>https://hirokimatsueda.github.io/post/treat-json-flexibly-with-go/</guid>
      <description>最近はスクリプト言語を使う時に何を使うのが良いか迷います。
いや、もともと大して選んでいないんですが、Azure 関連の操作がメインだったので PowerShell をよく使っています。
PowerShell は C#っぽく書けるので悪くないんですが、改めて、OS 関係なく軽快に動いてくれる言語として go に注目しています。
プログラミングのリハビリを兼ねて go で Grafana を扱うコードを書いていたんですが、json を扱うところで苦労したのでノウハウをメモしておこうと思います。
encoding/json を使用する場合のお話になります。
1. 礼儀正しく扱う json の構造をすべて把握している場合は、その構造を表現した type を宣言し、json.Unmarshal で変換された値を突っ込むことができます。
一部定義するだけでも良いようです。
例えば Grafana で GET /api/search/ を実行した結果の json を処理したい場合を考えます。
https://grafana.com/docs/grafana/latest/http_api/folder_dashboard_search/
得られる json には、id、uid、title、・・・といくつかの値が得られますが、例えばその中で title と uid の値だけ拾いたいときは下記のような感じです。
package main  import (  &amp;#34;encoding/json&amp;#34;  &amp;#34;fmt&amp;#34;  &amp;#34;log&amp;#34; )  type DashboardOverview struct {  Title string `json:&amp;#34;title&amp;#34;`  Uid string `json:&amp;#34;uid&amp;#34;` }  func main() {  dashboardJson := 【Grafanaからjsonを取得する処理】  var dashboards []DashboardOverview  if err := json.</description>
    </item>
    
  </channel>
</rss>
