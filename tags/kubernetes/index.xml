<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on 備忘録</title>
    <link>https://blog.pokapu.jp/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on 備忘録</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <copyright>Copyright © 2022 Hiroki Matsueda</copyright>
    <lastBuildDate>Fri, 15 Oct 2021 08:35:01 +0900</lastBuildDate>
    <atom:link href="https://blog.pokapu.jp/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KubernetesのTaintにビビらない</title>
      <link>https://blog.pokapu.jp/post/dont-be-afraid-of-kubernetes-taint/</link>
      <pubDate>Fri, 15 Oct 2021 08:35:01 +0900</pubDate>
      <guid>https://blog.pokapu.jp/post/dont-be-afraid-of-kubernetes-taint/</guid>
      <description>&lt;p&gt;Kubernetes をやり始めたころ、登場する言葉の多さに絶望したことを覚えています。&#xA;特にこの「Taint」はびっくりしました、「汚す」ってどういうこと？&#xA;ちょっと解説してみます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ノードを汚すという行為&#34;&gt;ノードを汚すという行為&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl taint&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;のようなコマンドを使うと、ノードに Taint をつける、つまりノードを汚すことになります。&lt;/p&gt;&#xA;&lt;p&gt;なんだかネガティブな感じですよね。&lt;/p&gt;&#xA;&lt;p&gt;ここで大事なことは、「Pod はキレイ好き！」ということです。&lt;/p&gt;&#xA;&lt;p&gt;Taint が設定されたノードでは、普通の Pod は「こんな汚い場所で立ち上がりたくない！」となります。&lt;/p&gt;&#xA;&lt;p&gt;Taint を活用するコマンドで&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl drain&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;というのがありますが、これを使うと Taint の作用等により Pod をノードから安全に追い出すことができ、ノードのメンテナンスが可能な状態になります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;汚れを許容する-toleration&#34;&gt;汚れを許容する Toleration&lt;/h2&gt;&#xA;&lt;p&gt;通常の Pod は完璧主義というか、あらゆる Taint を拒否します（たぶん）。&lt;/p&gt;&#xA;&lt;p&gt;でも、いつもすべてを清潔に保てるとは限りませんよね、例えば家の窓の掃除は結構妥協してたり・・・&lt;/p&gt;&#xA;&lt;p&gt;こういう、一部の Taint は気にしない、といった振る舞いを Pod にさせるために Toleration という概念があります。&lt;/p&gt;&#xA;&lt;p&gt;例えば Windows コンテナの Pod は Windows のノードでしか起動できないので、ノードに Windows 限定にする Taint をつけておき、Windows の Pod で Toleration を設定すれば良いことがありそうですね。&lt;/p&gt;&#xA;&lt;p&gt;（急にニッチな話題に・・・）&lt;/p&gt;&#xA;&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;&#xA;&lt;p&gt;詳しいコマンドは解説しませんでしたが、「Taint」という概念については「Pod はキレイ好きだから汚れた場所にはいきたくない」という性格を覚えておくと、関連するドキュメントが一気に読みやすくなります。&lt;/p&gt;&#xA;&lt;p&gt;是非覚えておいてください。&lt;/p&gt;</description>
    </item>
    <item>
      <title>自作のWindowsアプリをAKSに載せるキホン技</title>
      <link>https://blog.pokapu.jp/post/get-started-with-windows-container-aks-easily/</link>
      <pubDate>Wed, 08 Apr 2020 21:07:42 +0900</pubDate>
      <guid>https://blog.pokapu.jp/post/get-started-with-windows-container-aks-easily/</guid>
      <description>&lt;p&gt;Azure Kubernetes Service(以降、AKS)は Windows コンテナの使用できる構成を作成することができます。&lt;/p&gt;&#xA;&lt;p&gt;（記事公開時点ではパブリックプレビュー）&lt;/p&gt;&#xA;&lt;p&gt;Windows コンテナが使える AKS を用意して、アプリを動かしてみましょう。&lt;/p&gt;&#xA;&lt;p&gt;アプリの作成からインフラの作成まで一通り必要な手順を書いてみましたので、この記事をベースに Windows コンテナの世界に入門していただけたらと思います。&lt;/p&gt;&#xA;&lt;p&gt;また、アプリ開発、コンテナ作成、AKS 作成を一通り記載しているので、例えばアプリ開発は知識があるけどインフラはちょっと・・・という場合に部分的に参照していただけると嬉しいです。&lt;/p&gt;&#xA;&lt;p&gt;Azure Cloud Shell とはなんぞや？などの細かい説明は省いていますので、適宜調べながら読み進めていただけたらと思います。&lt;/p&gt;&#xA;&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;（Windows 環境でしか動作しない）アプリケーションを作成します&lt;/li&gt;&#xA;&lt;li&gt;アプリケーションを載せたコンテナイメージを作成します&lt;/li&gt;&#xA;&lt;li&gt;コンテナイメージをコンテナレジストリ（ACR）に格納します&lt;/li&gt;&#xA;&lt;li&gt;Windows コンテナが動作する AKS を作成します&lt;/li&gt;&#xA;&lt;li&gt;マニフェストファイルを使用して、AKS 上でコンテナを動かします&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;web-アプリの作成&#34;&gt;Web アプリの作成&lt;/h2&gt;&#xA;&lt;p&gt;【作業環境の想定：手元の Windows PC】&lt;/p&gt;&#xA;&lt;p&gt;Web 上に公開されているサンプルアプリを使っても良いんですが、現実は自社で作成したアプリなどを使用すると思うので、Web アプリの作成からサラッと見てみましょう。&lt;/p&gt;&#xA;&lt;p&gt;Windows コンテナが必要なケースは、Windows でしか動作しないアプリ、例えば.NET Framework のアプリを使用している場合だと思われます。.NET Framework の ASP.NET MVC アプリを作っておきましょう。&lt;/p&gt;&#xA;&lt;p&gt;下記サイトから Visual Studio のインストーラをダウンロードします。&#xA;&lt;a href=&#34;https://visualstudio.microsoft.com/ja/downloads/&#34;&gt;https://visualstudio.microsoft.com/ja/downloads/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;インストーラを起動し、「ASP.NET と Web 開発」を選択してインストールします。&lt;/p&gt;&#xA;&lt;p&gt;インストールが成功したら、新規プロジェクトを起動して、C#の ASP.NET MVC アプリを作成しましょう。&lt;/p&gt;&#xA;&lt;p&gt;ちょっと古めのアプリを載せる想定だと思いますので、.NET Framework は「4.5.2」辺りが良いでしょうか。プロジェクト名は適当で良いので、「MVC」のアプリを作成してください。&lt;/p&gt;&#xA;&lt;p&gt;アプリが作成されたら、Visual Studio のソリューションエクスプローラーから、Views/Home/Index.cshtml を開き、適当な加工を加えて実行してみてください。例えば下記のような感じでザックリいきましょう。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ViewBag.Title = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;コンテナアプリのデモ&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;div class=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jumbotron&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;h1&amp;gt;ASP.NET&amp;lt;/h1&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;p class=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lead&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;コンテナで&lt;/span&gt;Webアプリを動かしてみよう&amp;lt;/p&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/div&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;F5 キーでアプリの正常動作を確認したら、アプリケーションを発行しましょう。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
