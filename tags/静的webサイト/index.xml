<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>静的Webサイト on 備忘録</title>
    <link>https://blog.pokapu.jp/tags/%E9%9D%99%E7%9A%84web%E3%82%B5%E3%82%A4%E3%83%88/</link>
    <description>Recent content in 静的Webサイト on 備忘録</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <copyright>Copyright © 2022 Hiroki Matsueda</copyright>
    <lastBuildDate>Tue, 12 Apr 2022 11:34:24 +0900</lastBuildDate>
    <atom:link href="https://blog.pokapu.jp/tags/%E9%9D%99%E7%9A%84web%E3%82%B5%E3%82%A4%E3%83%88/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Static Web AppsのAPIでマネージドIDを使う方法</title>
      <link>https://blog.pokapu.jp/post/how-to-use-a-managed-id-with-the-static-web-apps-api/</link>
      <pubDate>Tue, 12 Apr 2022 11:34:24 +0900</pubDate>
      <guid>https://blog.pokapu.jp/post/how-to-use-a-managed-id-with-the-static-web-apps-api/</guid>
      <description>&lt;p&gt;Static Web Apps はお手軽に静的な Web サイトを提供するだけでなく、API もデプロイできます。&lt;/p&gt;&#xA;&lt;p&gt;API をデプロイした場合、Azure の他のリソースにアクセスする処理が必要なケースが多いと思います。&lt;/p&gt;&#xA;&lt;p&gt;API から他のリソースにアクセスするには接続情報を環境変数に持たせる手もありますが、マネージド ID を使用するとより安全でスマートなコードが組めるので良いですよね。&lt;/p&gt;&#xA;&lt;h2 id=&#34;static-web-apps-の-api-は-2-種類&#34;&gt;Static Web Apps の API は 2 種類&lt;/h2&gt;&#xA;&lt;p&gt;Static Web Apps の API は &lt;strong&gt;マネージド関数&lt;/strong&gt; と &lt;strong&gt;独自の関数&lt;/strong&gt; の使用という 2 つの構成が存在します。&#xA;マネージド関数の方がお手軽に使えますが、下記の表にあるようにマネージド ID（現状の和訳だと「管理対象 ID」になっている）が使えません。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/azure/static-web-apps/apis&#34;&gt;https://docs.microsoft.com/ja-jp/azure/static-web-apps/apis&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;このため、 &lt;strong&gt;独自の関数の使用&lt;/strong&gt; を選択する必要があります。&lt;/p&gt;&#xA;&lt;p&gt;・・・とキレイに書いてみましたが、実際はこの仕様を知らず、Static Web Apps のマネージド ID を有効化して IAM 設定をして「動かないなぁ。。」と悩んでいました。&#xA;マネージド関数でマネージド ID を使おうとして、169.254.169.254:80 にアクセスできない旨のエラーを見て気づきました。&#xA;上記 IP アドレスは下記のドキュメント等に登場しますが、Azure に対する何らかの問い合わせに使われる IP アドレスです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/azure/active-directory/managed-identities-azure-resources/how-to-use-vm-token&#34;&gt;https://docs.microsoft.com/ja-jp/azure/active-directory/managed-identities-azure-resources/how-to-use-vm-token&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;独自の関数の使用&#34;&gt;独自の関数の使用&lt;/h2&gt;&#xA;&lt;p&gt;下記のドキュメントを参考に、Azure ポータルからポチポチ設定すれば連携できます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/azure/static-web-apps/functions-bring-your-own&#34;&gt;https://docs.microsoft.com/ja-jp/azure/static-web-apps/functions-bring-your-own&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ドキュメントを見なくてもできちゃうくらい簡単です。&#xA;まずはマネージド ID を有効化した Functions を用意し、その後 Static Web Apps の「関数」のところからリンクすれば OK です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Static Web Appsの連携先GitHubリポジトリを変更する方法</title>
      <link>https://blog.pokapu.jp/post/how-to-modify-a-github-repository-that-links-to-static-web-apps/</link>
      <pubDate>Tue, 22 Mar 2022 14:41:42 +0900</pubDate>
      <guid>https://blog.pokapu.jp/post/how-to-modify-a-github-repository-that-links-to-static-web-apps/</guid>
      <description>&lt;p&gt;Static Web Apps (静的 Web アプリ) って便利ですよね！&#xA;単品のリソース構築で、CDN、Web サーバー、API サーバー、カスタムドメイン with HTTPS、アプリの自動デプロイが一気に実現できるので、これからどんどん活用したいです。&lt;/p&gt;&#xA;&lt;p&gt;ただ私はまだ慣れていないので、アプリを検証用の GitHub リポジトリで用意してインフラを作り、後から参照する GitHub リポジトリを差し替えたくなりました。&#xA;その手順が簡単に分からなかったので、本記事で整理したいと思います。&lt;/p&gt;&#xA;&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;az staticwebapp disconnect&lt;/code&gt; してから &lt;code&gt;az staticwebapp update&lt;/code&gt; しましょう。&lt;/p&gt;&#xA;&lt;h2 id=&#34;手順&#34;&gt;手順&lt;/h2&gt;&#xA;&lt;p&gt;Azure CLI で対応できました。&#xA;まずはいつも通り、Azure CLI で Azure にログインします。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;az login -t tenant-id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;az account set -s subscription-id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;続いて、&lt;code&gt;az staticwebapp disconnect&lt;/code&gt; を使用して Static Web Apps を GitHub リポジトリから切断します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;az staticwebapp disconnect --name static-web-app-name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この状態で Azure ポータルから Static Web Apps の概要画面を眺めると、確かに GitHub リポジトリとの関連が無くなっていることが分かります。&lt;/p&gt;&#xA;&lt;p&gt;最後に &lt;code&gt;az staticwebapp update&lt;/code&gt; を実行して、目的の GitHub リポジトリと接続してあげましょう。&#xA;GitHub の Personal Access Token が必要です。&#xA;(記事執筆時点では –login-with-github のオプションは指定できませんでした)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
