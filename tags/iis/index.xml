<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IIS on 備忘録</title>
    <link>https://blog.pokapu.jp/tags/iis/</link>
    <description>Recent content in IIS on 備忘録</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <copyright>Copyright © 2022 Hiroki Matsueda</copyright>
    <lastBuildDate>Mon, 03 Feb 2020 21:29:12 +0900</lastBuildDate>
    <atom:link href="https://blog.pokapu.jp/tags/iis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dockerfileに出てくる謎のexe、ServiceMonitor</title>
      <link>https://blog.pokapu.jp/post/mysterious-exe-that-appears-in-dockerfile/</link>
      <pubDate>Mon, 03 Feb 2020 21:29:12 +0900</pubDate>
      <guid>https://blog.pokapu.jp/post/mysterious-exe-that-appears-in-dockerfile/</guid>
      <description>&lt;h2 id=&#34;dockerfile-の基本的な書き方&#34;&gt;Dockerfile の基本的な書き方&lt;/h2&gt;&#xA;&lt;p&gt;皆様、Windows コンテナで遊んでいますか？&lt;/p&gt;&#xA;&lt;p&gt;Dockerfile に書く内容は、誤解を恐れず表現すると、だいたい下記のような流れですよね。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;ベースイメージ&lt;/li&gt;&#xA;&lt;li&gt;ミドルウェアのインストール、セットアップの処理&lt;/li&gt;&#xA;&lt;li&gt;アプリケーションのコピー&lt;/li&gt;&#xA;&lt;li&gt;アプリケーションの起動を監視するために ENTRYPOINT を記載&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;これだけ認識していれば、例えば単発実行や無限ループで処理待機するコンソールアプリケーションのコンテナ化なんてのは、（細かいことを無視すれば）すぐにできてしまうと思います。&lt;/p&gt;&#xA;&lt;h2 id=&#34;謎の-exe-servicemonitor&#34;&gt;謎の exe 、ServiceMonitor&lt;/h2&gt;&#xA;&lt;p&gt;しかし、例えば下記の Dockerfile を見てください。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/dotnet-framework-docker/blob/7d120a3da56ea5279e1b54a8185530af056c7b33/4.8/aspnet/windowsservercore-ltsc2019/Dockerfile&#34;&gt;https://github.com/microsoft/dotnet-framework-docker/blob/7d120a3da56ea5279e1b54a8185530af056c7b33/4.8/aspnet/windowsservercore-ltsc2019/Dockerfile&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;これは IIS で動く Web アプリを動かすときに使える Dockerfile になるんですが、 ENTRYPOINT に ServiceMonitor.exe なるものが指定されています。&lt;/p&gt;&#xA;&lt;p&gt;「なにこれ」と思いませんでしたか？&lt;/p&gt;&#xA;&lt;p&gt;私は思いました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;そもそも-entrypoint-って何だっけ&#34;&gt;そもそも ENTRYPOINT って何だっけ&lt;/h2&gt;&#xA;&lt;p&gt;ENTRYPOINT は「コンテナが実行するファイルを設定します。」とのことです。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://docs.docker.jp/v1.11/engine/reference/builder.html#entrypoint&#34;&gt;http://docs.docker.jp/v1.11/engine/reference/builder.html#entrypoint&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;そして、その「実行するファイル」が終了すると共に、コンテナが終了します。&lt;/p&gt;&#xA;&lt;p&gt;これを IIS で動かすアプリに当てはめるとどうなるでしょうか？&lt;/p&gt;&#xA;&lt;p&gt;IIS で動かすアプリは exe ファイルでは無いので、それ単体で実行することはできませんよね。IIS の上に載せてあげることで初めて動作します。&lt;/p&gt;&#xA;&lt;p&gt;ということは、IIS が ENTRYPOINT に記載すべきものとなります。&lt;/p&gt;&#xA;&lt;p&gt;しかし、 IIS 自体はサービスなので、「コンテナが実行するファイル」とは違う概念になります。&lt;/p&gt;&#xA;&lt;h2 id=&#34;サービスの起動状態を監視するアプリが欲しい&#34;&gt;「サービスの起動状態を監視するアプリ」が欲しい&lt;/h2&gt;&#xA;&lt;p&gt;例えば、「コンテナが実行するファイル」が IIS というサービスの起動状態を監視してくれて、そのサービスの状態に従って終了してくれたら良さそうに思いませんか？&lt;/p&gt;&#xA;&lt;p&gt;そんな役割を担ってくれるのが ServiceMonitor.exe です。&lt;/p&gt;&#xA;&lt;p&gt;よって、IIS のようなサービスの状態がコンテナの起動状態を左右する場合は、 ServiceMonitor.exe を ENTRYPOINT に指定してあげればコンテナが実現できそうですね。&lt;/p&gt;&#xA;&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;&#xA;&lt;p&gt;ServiceMonitor.exe のおかげて IIS アプリのコンテナが実現できることが分かりましたでしょうか？&#xA;広く公開されている Dockerfile は参考になるので、「これ何やってるんだろう？」を深堀してみると面白いですし、勉強になります。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
