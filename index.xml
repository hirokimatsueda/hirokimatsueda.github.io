<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>備忘録</title>
    <link>https://hirokimatsueda.github.io/</link>
    <description>Recent content on 備忘録</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright © 2022 Hiroki Matsueda</copyright>
    <lastBuildDate>Tue, 12 Apr 2022 11:34:24 +0900</lastBuildDate><atom:link href="https://hirokimatsueda.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Static Web AppsのAPIでマネージドIDを使う方法</title>
      <link>https://hirokimatsueda.github.io/post/how-to-use-a-managed-id-with-the-static-web-apps-api/</link>
      <pubDate>Tue, 12 Apr 2022 11:34:24 +0900</pubDate>
      
      <guid>https://hirokimatsueda.github.io/post/how-to-use-a-managed-id-with-the-static-web-apps-api/</guid>
      <description>Static Web Apps はお手軽に静的な Web サイトを提供するだけでなく、API もデプロイできます。
API をデプロイした場合、Azure の他のリソースにアクセスする処理が必要なケースが多いと思います。
API から他のリソースにアクセスするには接続情報を環境変数に持たせる手もありますが、マネージド ID を使用するとより安全でスマートなコードが組めるので良いですよね。
Static Web Apps の API は 2 種類 Static Web Apps の API は マネージド関数 と 独自の関数 の使用という 2 つの構成が存在します。 マネージド関数の方がお手軽に使えますが、下記の表にあるようにマネージド ID（現状の和訳だと「管理対象 ID」になっている）が使えません。
https://docs.microsoft.com/ja-jp/azure/static-web-apps/apis
このため、 独自の関数の使用 を選択する必要があります。
・・・とキレイに書いてみましたが、実際はこの仕様を知らず、Static Web Apps のマネージド ID を有効化して IAM 設定をして「動かないなぁ。。」と悩んでいました。 マネージド関数でマネージド ID を使おうとして、169.254.169.254:80 にアクセスできない旨のエラーを見て気づきました。 上記 IP アドレスは下記のドキュメント等に登場しますが、Azure に対する何らかの問い合わせに使われる IP アドレスです。
https://docs.microsoft.com/ja-jp/azure/active-directory/managed-identities-azure-resources/how-to-use-vm-token
独自の関数の使用 下記のドキュメントを参考に、Azure ポータルからポチポチ設定すれば連携できます。
https://docs.microsoft.com/ja-jp/azure/static-web-apps/functions-bring-your-own
ドキュメントを見なくてもできちゃうくらい簡単です。 まずはマネージド ID を有効化した Functions を用意し、その後 Static Web Apps の「関数」のところからリンクすれば OK です。</description>
    </item>
    
    <item>
      <title>Static Web Appsの連携先GitHubリポジトリを変更する方法</title>
      <link>https://hirokimatsueda.github.io/post/how-to-modify-a-github-repository-that-links-to-static-web-apps/</link>
      <pubDate>Tue, 22 Mar 2022 14:41:42 +0900</pubDate>
      
      <guid>https://hirokimatsueda.github.io/post/how-to-modify-a-github-repository-that-links-to-static-web-apps/</guid>
      <description>Static Web Apps (静的 Web アプリ) って便利ですよね！ 単品のリソース構築で、CDN、Web サーバー、API サーバー、カスタムドメイン with HTTPS、アプリの自動デプロイが一気に実現できるので、これからどんどん活用したいです。
ただ私はまだ慣れていないので、アプリを検証用の GitHub リポジトリで用意してインフラを作り、後から参照する GitHub リポジトリを差し替えたくなりました。 その手順が簡単に分からなかったので、本記事で整理したいと思います。
概要 az staticwebapp disconnect してから az staticwebapp update しましょう。
手順 Azure CLI で対応できました。 まずはいつも通り、Azure CLI で Azure にログインします。
az login -t tenant-id az account set -s subscription-id 続いて、az staticwebapp disconnect を使用して Static Web Apps を GitHub リポジトリから切断します。
az staticwebapp disconnect --name static-web-app-name この状態で Azure ポータルから Static Web Apps の概要画面を眺めると、確かに GitHub リポジトリとの関連が無くなっていることが分かります。
最後に az staticwebapp update を実行して、目的の GitHub リポジトリと接続してあげましょう。 GitHub の Personal Access Token が必要です。 (記事執筆時点では –login-with-github のオプションは指定できませんでした)</description>
    </item>
    
    <item>
      <title>マネージドIDを使用してRunbookからAzureリソースを操作する</title>
      <link>https://hirokimatsueda.github.io/post/control-azure-resources-from-a-runbook-using-a-managed-id/</link>
      <pubDate>Sun, 12 Dec 2021 12:06:20 +0900</pubDate>
      
      <guid>https://hirokimatsueda.github.io/post/control-azure-resources-from-a-runbook-using-a-managed-id/</guid>
      <description>マネージド ID というものを使うと、サービスプリンシパルを用意せずに Azure リソースから Azure リソースの操作を実施することができます。 Runbook を用いてプライベート DNS ゾーンの操作を自動化を実施することを想定してその手順を用意してみました。 料金的にもリーズナブルで、すべて Azure ポータル上の作業で完結するので、一度やってみましょう。
操作対象のリソース（プライベート DNS ゾーン）の用意 Azure ポータルから DNS ゾーンを作成します。 DNS ゾーンの名前は private.example.com 、リソースグループ名は blog で作成してみました。
Screenshotこのまま VNET に接続しなければ宝の持ち腐れですが、今回は説明用ということで。
Runbook の用意 Azure ポータルから Automation アカウントを作成します。 名前は blogaccount とか、任意で大丈夫です。
作成時に詳細設定でマネージド ID の設定ができるので、デフォルトの通り「システム割り当て」をオンにしておいてください。 （Automation アカウントの作成後、アカウント設定 – ID から、システム割り当てマネージド ID を「オン」にしても大丈夫です）
ScreenshotAutomation アカウントが作成されたら、Automation アカウントのポータル画面から プロセス オートメーション – Runbook を開き、＋ Runbook を作成を選択します。
Runbook の種類に PowerShell を選び、ランタイムバージョンは 5.</description>
    </item>
    
  </channel>
</rss>
